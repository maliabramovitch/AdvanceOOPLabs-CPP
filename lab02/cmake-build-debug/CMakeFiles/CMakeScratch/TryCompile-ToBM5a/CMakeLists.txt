cmake_minimum_required(VERSION 3.25.2.0)
project(CMAKE_TRY_COMPILE C)
set_property(DIRECTORY PROPERTY INCLUDE_DIRECTORIES "")
set(CMAKE_VERBOSE_MAKEFILE 1)
set(CMAKE_C_FLAGS "")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${COMPILE_DEFINITIONS}")
set(CMAKE_C_FLAGS_DEBUG "-g")
set(CMAKE_EXE_LINKER_FLAGS "-Wl,--enable-auto-import")
set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${EXE_LINKER_FLAGS}")
include_directories(${INCLUDE_DIRECTORIES})
set(CMAKE_SUPPRESS_REGENERATION 1)
link_directories(${LINK_DIRECTORIES})
add_definitions([==[-v]==])
cmake_policy(SET CMP0065 NEW)
cmake_policy(SET CMP0083 NEW)
include("${CMAKE_ROOT}/Modules/Internal/HeaderpadWorkaround.cmake")
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "/cygdrive/c/Users/malia/Degree/Semester d/Advanced OOP/labs/AdvanceOOPLabs-CPP/lab02/cmake-build-debug/CMakeFiles/CMakeScratch/TryCompile-ToBM5a")
add_executable(cmTC_da51e "/cygdrive/c/Users/malia/AppData/Local/JetBrains/CLion2023.1/cygwin_cmake/share/cmake-3.25.2/Modules/CMakeCCompilerABI.c")
file(GENERATE OUTPUT "${CMAKE_BINARY_DIR}/cmTC_da51e_loc"
     CONTENT $<TARGET_FILE:cmTC_da51e>)
target_link_libraries(cmTC_da51e ${LINK_LIBRARIES})
